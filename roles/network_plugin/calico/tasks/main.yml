---
- name: Calico | Set docker daemon options
  template:
    src: docker
    dest: "/etc/default/docker"
    owner: root
    group: root
    mode: 0644
  notify:
    - restart docker
  when: ansible_os_family != "CoreOS"

- name: Calico | Write docker.service systemd file
  template:
    src: systemd-docker.service
    dest: /lib/systemd/system/docker.service
  notify: restart docker
  when: ansible_service_mgr == "systemd" and ansible_os_family != "CoreOS"

- meta: flush_handlers

- name: Calico | Install calicoctl bin
  command: rsync -piu "{{ local_release_dir }}/calico/bin/calicoctl" "{{ bin_dir }}/calicoctl"
  register: calico_copy
  changed_when: false

- name: Calico | Install calico cni bin
  command: rsync -piu "{{ local_release_dir }}/calico/bin/calico" "/opt/cni/bin/calico"
  changed_when: false

- name: Calico | Install calico-ipam cni bin
  command: rsync -piu "{{ local_release_dir }}/calico/bin/calico" "/opt/cni/bin/calico-ipam"
  changed_when: false

- name: Calico | install calicoctl
  file: path={{ bin_dir }}/calicoctl mode=0755 state=file

- name: Calico | wait for etcd
  wait_for:
    port: 2379
  when: inventory_hostname in groups['kube-master']

- name: Calico | Check if calico network pool has already been configured
  uri:
    url: "http://127.0.0.1:2379/v2/keys/calico/v1/ipam/v4/pool"
    return_content: yes
    status_code: 200,404
  register: calico_conf
  run_once: true

- name: Calico | Configure calico network pool
  command: "{{ bin_dir }}/calicoctl pool add {{ kube_pods_subnet }}"
  run_once: true
  when: calico_conf.status == 404 and (cloud_provider is not defined or cloud_provider != True)
        and not nat_outgoing|default(false) or
        (nat_outgoing|default(false) and peer_with_router|default(false))

- name: Calico | Configure calico network pool for cloud
  command: "{{ bin_dir }}/calicoctl pool add {{ kube_pods_subnet }} --ipip --nat-outgoing"
  run_once: true
  when: calico_conf.status == 404 and cloud_provider is defined and cloud_provider == True

- name: Calico | Configure calico network pool with nat outgoing
  command: "{{ bin_dir}}/calicoctl pool add {{ kube_pods_subnet }} --nat-outgoing"
  run_once: true
  when: calico_conf.status == 404 and (cloud_provider is not defined or cloud_provider != True)
        and nat_outgoing|default(false) and not peer_with_router|default(false)

- name: Calico | Get calico configuration from etcd
  uri:
    url: "http://127.0.0.1:2379/v2/keys/calico/v1/ipam/v4/pool"
    return_content: yes
  register: calico_pools
  run_once: true

- name: Calico | Check if calico pool is properly configured
  fail:
    msg: 'Only one network pool must be configured and it must be the subnet {{ kube_pods_subnet }}.
    Please erase calico configuration and run the playbook again ("etcdctl rm --recursive /calico/v1/ipam/v4/pool")'
  when: ( calico_pools.json['node']['nodes'] | length > 1 ) or
        ( not calico_pools.json['node']['nodes'][0]['key'] | search(".*{{ kube_pods_subnet | ipaddr('network') }}.*") )
  run_once: true

- name: Calico | Write /etc/network-environment
  template: src=network-environment.j2 dest=/etc/network-environment
  when: ansible_service_mgr in ["sysvinit","upstart"]

- name: Calico | Write calico-node systemd init file
  template: src=calico-node.service.j2 dest=/etc/systemd/system/calico-node.service
  when: ansible_service_mgr == "systemd"
  notify: restart calico-node

- name: Calico | Write calico-node initd script
  template: src=deb-calico.initd.j2 dest=/etc/init.d/calico-node owner=root mode=0755
  when: ansible_service_mgr in ["sysvinit","upstart"] and ansible_os_family == "Debian"
  notify: restart calico-node

- name: Calico | Write calico-node initd script
  template: src=rh-calico.initd.j2 dest=/etc/init.d/calico-node owner=root mode=0755
  when: ansible_service_mgr in ["sysvinit","upstart"] and ansible_os_family == "RedHat"
  notify: restart calico-node

- meta: flush_handlers

- name: Calico | Enable calico-node
  service:
    name: calico-node
    state: started
    enabled: yes

- name: Calico | Restart calico if binary changed
  service:
    name: calico-node
    state: restarted
  when: calico_copy.stdout_lines

- name: Calico | Disable node mesh
  shell: "{{ bin_dir }}/calicoctl bgp node-mesh off"
  environment:
     ETCD_AUTHORITY: "127.0.0.1:2379"
  when: peer_with_router|default(false) and inventory_hostname in groups['kube-node']

- name: Calico | Configure peering with router(s)
  shell: "{{ bin_dir }}/calicoctl node bgp peer add {{ item.router_id }} as {{ item.as }}"
  environment:
     ETCD_AUTHORITY: "127.0.0.1:2379"
  with_items: peers
  when: peer_with_router|default(false) and inventory_hostname in groups['kube-node']

